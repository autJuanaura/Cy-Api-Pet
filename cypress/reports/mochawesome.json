{
  "stats": {
    "suites": 0,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-08T09:48:26.389Z",
    "end": "2024-10-08T09:48:27.585Z",
    "duration": 1196,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ae02e846-ddd6-403d-8a1a-43e93ef669f0",
      "title": "",
      "fullFile": "cypress/e2e/store-suite.cy.js",
      "file": "cypress/e2e/store-suite.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Get inventory successfully",
          "fullTitle": "Get inventory successfully",
          "timedOut": null,
          "duration": 513,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.request({\n  method: 'GET',\n  url: '/store/inventory'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.headers).to.have.property('content-type', 'application/json');\n  expect(response.headers).to.have.property('access-control-allow-origin', '*');\n  expect(response.body).to.be.an('object');\n  expect(response.body).to.have.property('available').that.is.a('number');\n  expect(response.body).to.have.property('sold').that.is.a('number');\n  expect(response.body).to.have.property('string').that.is.a('number');\n  expect(response.body).to.have.property('availabe').that.is.a('number');\n  expect(response.body).to.have.property('avaliable').that.is.a('number');\n  expect(response.body).to.have.property('pending').that.is.a('number');\n  expect(response.body).to.have.property('busy').that.is.a('number');\n  expect(response.body).to.have.property('available').that.is.a('number');\n  expect(response.body).to.have.property('Available').that.is.a('number');\n  expect(response.body).to.have.property('status').that.is.a('number');\n});",
          "err": {},
          "uuid": "93db7749-ee39-49a1-90a8-6dbe39648818",
          "parentUUID": "ae02e846-ddd6-403d-8a1a-43e93ef669f0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Place order successfully",
          "fullTitle": "Place order successfully",
          "timedOut": null,
          "duration": 125,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.fixture('order.json').then(order => {\n  cy.request({\n    method: 'POST',\n    url: '/store/order',\n    body: order,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.headers).to.have.property('content-type', 'application/json');\n    expect(response.headers).to.have.property('access-control-allow-origin', '*');\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('id').that.is.a('number');\n    expect(response.body).to.have.property('petId', 0);\n    expect(response.body).to.have.property('quantity', 0);\n    expect(response.body).to.have.property('shipDate').that.is.a('string');\n    expect(response.body).to.have.property('status', 'placed');\n    expect(response.body).to.have.property('complete', true);\n    orderId = response.body.id; // store the order ID\n  });\n});",
          "err": {},
          "uuid": "2de5be98-9cf3-415b-9d05-189e157bc9f0",
          "parentUUID": "ae02e846-ddd6-403d-8a1a-43e93ef669f0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Get order successfully by Id",
          "fullTitle": "Get order successfully by Id",
          "timedOut": null,
          "duration": 120,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.request({\n  method: 'GET',\n  url: `/store/order/${orderId}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.headers).to.have.property('content-type', 'application/json');\n  expect(response.headers).to.have.property('access-control-allow-origin', '*');\n  expect(response.body).to.be.an('object');\n  expect(response.body).to.have.property('id', orderId);\n  expect(response.body).to.have.property('petId', 0);\n  expect(response.body).to.have.property('quantity', 0);\n  expect(response.body).to.have.property('shipDate').that.is.a('string');\n  expect(response.body).to.have.property('status', 'placed');\n  expect(response.body).to.have.property('complete', true);\n});",
          "err": {},
          "uuid": "d675a558-532f-42d4-bcd2-3cc64db35068",
          "parentUUID": "ae02e846-ddd6-403d-8a1a-43e93ef669f0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Delete order successfully",
          "fullTitle": "Delete order successfully",
          "timedOut": null,
          "duration": 227,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.fixture('order.json').then(order => {\n  cy.request({\n    method: 'POST',\n    url: '/store/order',\n    body: order,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.headers).to.have.property('content-type', 'application/json');\n    expect(response.headers).to.have.property('access-control-allow-origin', '*');\n    expect(response.body).to.be.an('object');\n    expect(response.body).to.have.property('id').that.is.a('number');\n    expect(response.body).to.have.property('petId', 0);\n    expect(response.body).to.have.property('quantity', 0);\n    expect(response.body).to.have.property('shipDate').that.is.a('string');\n    expect(response.body).to.have.property('status', 'placed');\n    expect(response.body).to.have.property('complete', true);\n    const orderId = response.body.id; // store the order ID\n    cy.request({\n      method: 'DELETE',\n      url: `/store/order/${orderId}`\n    }).then(deleteResponse => {\n      expect(deleteResponse.status).to.eq(200);\n      expect(deleteResponse.headers).to.have.property('content-type', 'application/json');\n      expect(deleteResponse.headers).to.have.property('access-control-allow-origin', '*');\n      expect(deleteResponse.body).to.be.an('object');\n      expect(deleteResponse.body).to.have.property('code', 200);\n      expect(deleteResponse.body).to.have.property('type', 'unknown');\n      expect(deleteResponse.body).to.have.property('message').that.is.a('string');\n    });\n  });\n});",
          "err": {},
          "uuid": "26404c22-14b2-4fbd-9c15-fa87a761494c",
          "parentUUID": "ae02e846-ddd6-403d-8a1a-43e93ef669f0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "93db7749-ee39-49a1-90a8-6dbe39648818",
        "2de5be98-9cf3-415b-9d05-189e157bc9f0",
        "d675a558-532f-42d4-bcd2-3cc64db35068",
        "26404c22-14b2-4fbd-9c15-fa87a761494c"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 985,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}